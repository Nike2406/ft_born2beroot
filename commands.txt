Проверка версии
	# dpkg -l | grep sudo // grep etc
Политика паролей
	$ sudo vim /etc/login.defs
Конфиг ssh
	$ sudo vim /etc/ssh/sshd_config.
Конфиг sudo
	$ sudo vim /etc/sudoers.d/sudo_config
Добавление пользователя в группу sudo
	$ adduser <username> sudo
Проверка
	$ getent group sudo
Изменение hostname
	$ sudo vim /etc/hostname
Создание пользователя
	$ sudo adduser <username>
Проверка пользователя
	$ getent passwd <username>
	$ sudo chage -l <username>
Создание новой группы
	$ sudo addgroup <group_name>
Добавление пользователя в группу
	$ sudo adduser <username> <group_name>
Удалить пользователя из группы
	gpasswd -d пользователь группа
Проверка группы
	$ getent group user42
Проверка AppArmor
	$ sudo aa-status
Проверка ufw
	$ sudo ufw status
Добавление порта в ufw
	$ sudo ufw allow 4242
Удаление порта в ufw
	$ sudo ufw delete allow 8080
Проверка ssh
	$ sudo service ssh status
Запущенные процессы
	$ ps -a

Настройка crontab
	vim /etc/crontab
	vim /usr/bin/monitoring.sh
	crontab -e - настройка и редактирование
	crontab -l - вывод задач в расписании пользователя
	crontab -r - удаление правила

Каждые 30 сек
	*/1 * * * *root	sh /usr/local/bin/monitoring.sh
	* * * * * sleep 30; bash /var/monitoring.sh

lscpu - информация по процессору
grep - поиск совпадений
awk - поиск совпадений значений, например
	lscpu | grep 'CPU(s):' | awk 'NR == 1 {print $2}'
		lscpu 						- вывод таблицы по процессору
		grep 'CPU(s):' 				- поиск ключа 'CPU(s):'
		awk 'NR == 1 {print $2}' 	- поиск одного значения во втором столбце
free | grep 'Mem:' | awk 'NR == 1 {printf"%s/%sMB (%.2f%%)", $3 / 1024, $2 / 1024, $3 * 100 / $2})
df -h | grep 'LVMGroup-root'
sudo apt-get install sysstat - для мониторинга mpstat (cpu)
mpstat | awk 'NR == 1 {printf"%.1f%%", 100 - $12}' - загрузка цп
who -b | awk 'printf"%s %s", $3, $4}' - время последней перезагрузки

$ apt-get install net-tools - установка для nestat
$ netstat -t
	-a - показываеть все соединений - активные (non-listening - те которые установленные)
		 и те которые только listening
	-t - tcp
	-u - udp
	-n - показывать IP адреса вместо отрезолвенных хостов в домены
	-l - показывать только listening соединений
who - пользователи в системе
ifconfig | grep 'inet' | awk 'NR == 1 {print $2}' - IP
ifconfig | grep 'ether' | awk 'NR == 1 {print $2}' - MAC
cat /var/log/sudo/sudo_log | grep 'COMMAND' | wc -l -
	количество использований sudo

Для вывода использования LVM
	lvm=(lsblk | grep 'lvm' | wc -l)
	if (("$lvm"));
	then tmp="yes"
	else tmp="no"
	fi

which ifconfig - поиск пути комманды ifconfig

lighttpd - вебсервер
MariaDB - ответвление MySQL, отличие в отрытости разработки

Настройка MariaDB:
	$ sudo apt install mariadb-server - установка
	$ sudo mysql_secure_installation - настройка (везде yes, кроме установки пароля рута)
	$ sudo mariadb - вход в оболочку MariaDB
	$ CREATE DATABASE <database-name>; - создание базы (prochell_database)
	$ GRANT ALL ON <database-name>.* TO '<username-2>'@'localhost' IDENTIFIED BY '<password-2>' WITH GRANT OPTION;
		- создание пользователи для дб и предоставление ему полных привелегий для дб
		(GRANT ALL ON <prochell_database>.* TO 'prochell'@'localhost' IDENTIFIED BY '**password**' WITH GRANT OPTION;)
	$ FLUSH PRIVILEGES;
	$ exit
	$ mariadb -u <username-2> -p - проверка юзера
	$ SHOW DATABASES; - проверка бд

	$ sudo service mysql status - проверка состояния сервиса mysql
	$ ssh prochell@10.21.31.81 -p 4242 - подключение через ssh к виртуальной машине


Очистка MariaDB при ошибках сервера:
1.	sudo apt-get --purge remove mariadb*
	sudo apt-get autoremove
	sudo apt-get autoclean
	sudo apt-get --purge remove mysql*
	sudo apt-get autoremove
	sudo apt-get autoclean
2.	sudo rm -rf /etc/mysql
	sudo rm -rf /var/lib/mysql
3.	sudo apt install mariadb-server
	sudo mysql_secure_installation
		enter -> no -> yes*
4.	sudo mariadb
	CREATE DATABASE prochell_database;
	GRANT ALL ON prochell_database.* TO 'prochell'@'localhost' IDENTIFIED BY '!Nike45240690!' WITH GRANT OPTION;
	FLUSH PRIVILEGES;

Настройка виртуальной машины для запуска с основной (localhost)
	В сетях прописать правила:
---------------------------------------------------------------------
| protocol	|	Host IP	|	Host Port	| Guest IP	| Guest Port	|
---------------------------------------------------------------------
| TCP		|			|	4242		| 10.0.2.15	|	4242		|
---------------------------------------------------------------------
| TCP		|			|	80			| 10.0.2.15	|	80			|
---------------------------------------------------------------------
